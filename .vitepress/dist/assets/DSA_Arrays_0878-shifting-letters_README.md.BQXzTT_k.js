import{_ as e,c as s,o,ag as r}from"./chunks/framework.DUDLMHYb.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Arrays/0878-shifting-letters/README.md","filePath":"DSA/Arrays/0878-shifting-letters/README.md"}'),n={name:"DSA/Arrays/0878-shifting-letters/README.md"};function a(i,t,l,c,p,h){return o(),s("div",null,[...t[0]||(t[0]=[r(`<h2><a href="https://leetcode.com/problems/shifting-letters">878. Shifting Letters</a></h2><h3>Medium</h3><hr><p>You are given a string <code>s</code> of lowercase English letters and an integer array <code>shifts</code> of the same length.</p><p>Call the <code>shift()</code> of a letter, the next letter in the alphabet, (wrapping around so that <code>&#39;z&#39;</code> becomes <code>&#39;a&#39;</code>).</p><ul><li>For example, <code>shift(&#39;a&#39;) = &#39;b&#39;</code>, <code>shift(&#39;t&#39;) = &#39;u&#39;</code>, and <code>shift(&#39;z&#39;) = &#39;a&#39;</code>.</li></ul><p>Now for each <code>shifts[i] = x</code>, we want to shift the first <code>i + 1</code> letters of <code>s</code>, <code>x</code> times.</p><p>Return <em>the final string after all such shifts to s are applied</em>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> s = &quot;abc&quot;, shifts = [3,5,9]
<strong>Output:</strong> &quot;rpl&quot;
<strong>Explanation:</strong> We start with &quot;abc&quot;.
After shifting the first 1 letters of s by 3, we have &quot;dbc&quot;.
After shifting the first 2 letters of s by 5, we have &quot;igc&quot;.
After shifting the first 3 letters of s by 9, we have &quot;rpl&quot;, the answer.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> s = &quot;aaa&quot;, shifts = [1,2,3]
<strong>Output:</strong> &quot;gfd&quot;
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li><li><code>s</code> consists of lowercase English letters.</li><li><code>shifts.length == s.length</code></li><li><code>0 &lt;= shifts[i] &lt;= 10<sup>9</sup></code></li></ul>`,16)])])}const u=e(n,[["render",a]]);export{f as __pageData,u as default};
