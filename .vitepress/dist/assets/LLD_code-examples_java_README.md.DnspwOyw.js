import{_ as s,c as n,o as e,ag as i}from"./chunks/framework.DUDLMHYb.js";const h=JSON.parse('{"title":"Java Code Examples","description":"","frontmatter":{},"headers":[],"relativePath":"LLD/code-examples/java/README.md","filePath":"LLD/code-examples/java/README.md"}'),l={name:"LLD/code-examples/java/README.md"};function r(p,a,t,o,c,d){return e(),n("div",null,[...a[0]||(a[0]=[i(`<h1 id="java-code-examples" tabindex="-1">Java Code Examples <a class="header-anchor" href="#java-code-examples" aria-label="Permalink to &quot;Java Code Examples&quot;">​</a></h1><p>This directory contains Java implementations of all the concepts covered in the Low-Level Design guide. Each example is complete, runnable, and demonstrates real-world usage patterns.</p><h2 id="📁-directory-structure" tabindex="-1">📁 Directory Structure <a class="header-anchor" href="#📁-directory-structure" aria-label="Permalink to &quot;📁 Directory Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>java/</span></span>
<span class="line"><span>├── solid-principles/          # SOLID principles implementations</span></span>
<span class="line"><span>│   ├── srp/                  # Single Responsibility Principle</span></span>
<span class="line"><span>│   ├── ocp/                  # Open/Closed Principle</span></span>
<span class="line"><span>│   ├── lsp/                  # Liskov Substitution Principle</span></span>
<span class="line"><span>│   ├── isp/                  # Interface Segregation Principle</span></span>
<span class="line"><span>│   └── dip/                  # Dependency Inversion Principle</span></span>
<span class="line"><span>├── design-patterns/          # Gang of Four patterns</span></span>
<span class="line"><span>│   ├── creational/           # Creational patterns</span></span>
<span class="line"><span>│   │   ├── singleton/</span></span>
<span class="line"><span>│   │   ├── factory-method/</span></span>
<span class="line"><span>│   │   ├── abstract-factory/</span></span>
<span class="line"><span>│   │   ├── builder/</span></span>
<span class="line"><span>│   │   └── prototype/</span></span>
<span class="line"><span>│   ├── structural/           # Structural patterns</span></span>
<span class="line"><span>│   │   ├── adapter/</span></span>
<span class="line"><span>│   │   ├── decorator/</span></span>
<span class="line"><span>│   │   ├── facade/</span></span>
<span class="line"><span>│   │   ├── composite/</span></span>
<span class="line"><span>│   │   ├── bridge/</span></span>
<span class="line"><span>│   │   ├── flyweight/</span></span>
<span class="line"><span>│   │   └── proxy/</span></span>
<span class="line"><span>│   └── behavioral/           # Behavioral patterns</span></span>
<span class="line"><span>│       ├── observer/</span></span>
<span class="line"><span>│       ├── strategy/</span></span>
<span class="line"><span>│       ├── command/</span></span>
<span class="line"><span>│       ├── state/</span></span>
<span class="line"><span>│       ├── template-method/</span></span>
<span class="line"><span>│       ├── chain-of-responsibility/</span></span>
<span class="line"><span>│       ├── mediator/</span></span>
<span class="line"><span>│       ├── visitor/</span></span>
<span class="line"><span>│       ├── iterator/</span></span>
<span class="line"><span>│       └── memento/</span></span>
<span class="line"><span>├── case-studies/             # Real-world implementations</span></span>
<span class="line"><span>│   ├── parking-lot/</span></span>
<span class="line"><span>│   ├── elevator-system/</span></span>
<span class="line"><span>│   ├── chat-application/</span></span>
<span class="line"><span>│   ├── library-management/</span></span>
<span class="line"><span>│   ├── ecommerce-system/</span></span>
<span class="line"><span>│   ├── social-media-feed/</span></span>
<span class="line"><span>│   └── gaming-system/</span></span>
<span class="line"><span>└── utils/                    # Common utilities and helpers</span></span>
<span class="line"><span>    ├── DatabaseConnection.java</span></span>
<span class="line"><span>    ├── Logger.java</span></span>
<span class="line"><span>    └── TestRunner.java</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h2 id="🚀-how-to-use" tabindex="-1">🚀 How to Use <a class="header-anchor" href="#🚀-how-to-use" aria-label="Permalink to &quot;🚀 How to Use&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><ul><li>Java 8 or higher</li><li>Any IDE (IntelliJ IDEA, Eclipse, VS Code)</li><li>Maven (optional, for dependency management)</li></ul><h3 id="running-examples" tabindex="-1">Running Examples <a class="header-anchor" href="#running-examples" aria-label="Permalink to &quot;Running Examples&quot;">​</a></h3><ol><li><strong>Clone/Download</strong> the examples to your local machine</li><li><strong>Navigate</strong> to any specific example directory</li><li><strong>Compile</strong> the Java files:<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">javac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.java</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><strong>Run</strong> the main class:<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MainClass</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="example-structure" tabindex="-1">Example Structure <a class="header-anchor" href="#example-structure" aria-label="Permalink to &quot;Example Structure&quot;">​</a></h3><p>Each example follows this structure:</p><ul><li><strong>Main.java</strong>: Demonstrates the pattern/principle usage</li><li><strong>README.md</strong>: Explanation of the specific implementation</li><li><strong>Test.java</strong>: Unit tests (where applicable)</li><li>Supporting classes with clear, documented code</li></ul><h2 id="📚-quick-navigation" tabindex="-1">📚 Quick Navigation <a class="header-anchor" href="#📚-quick-navigation" aria-label="Permalink to &quot;📚 Quick Navigation&quot;">​</a></h2><h3 id="solid-principles" tabindex="-1">SOLID Principles <a class="header-anchor" href="#solid-principles" aria-label="Permalink to &quot;SOLID Principles&quot;">​</a></h3><ul><li><a href="./solid-principles/srp/">SRP Examples</a> - Employee management refactoring</li><li><a href="./solid-principles/ocp/">OCP Examples</a> - Shape calculator extensibility</li><li><a href="./solid-principles/lsp/">LSP Examples</a> - Bird inheritance hierarchy</li><li><a href="./solid-principles/isp/">ISP Examples</a> - Printer interface segregation</li><li><a href="./solid-principles/dip/">DIP Examples</a> - Order processing with dependency injection</li></ul><h3 id="popular-design-patterns" tabindex="-1">Popular Design Patterns <a class="header-anchor" href="#popular-design-patterns" aria-label="Permalink to &quot;Popular Design Patterns&quot;">​</a></h3><ul><li><a href="./design-patterns/creational/singleton/">Singleton</a> - Database connection manager</li><li><a href="./design-patterns/behavioral/observer/">Observer</a> - Stock price monitoring</li><li><a href="./design-patterns/behavioral/strategy/">Strategy</a> - Payment processing</li><li><a href="./design-patterns/creational/factory-method/">Factory Method</a> - Vehicle creation</li><li><a href="./design-patterns/structural/decorator/">Decorator</a> - Coffee ordering system</li></ul><h3 id="case-studies" tabindex="-1">Case Studies <a class="header-anchor" href="#case-studies" aria-label="Permalink to &quot;Case Studies&quot;">​</a></h3><ul><li><a href="./case-studies/parking-lot/">Parking Lot System</a> - Complete OOP design</li><li><a href="./case-studies/elevator-system/">Elevator System</a> - State machine implementation</li><li><a href="./case-studies/chat-application/">Chat Application</a> - Observer and Command patterns</li></ul><h2 id="🎯-learning-approach" tabindex="-1">🎯 Learning Approach <a class="header-anchor" href="#🎯-learning-approach" aria-label="Permalink to &quot;🎯 Learning Approach&quot;">​</a></h2><h3 id="for-beginners" tabindex="-1">For Beginners <a class="header-anchor" href="#for-beginners" aria-label="Permalink to &quot;For Beginners&quot;">​</a></h3><ol><li>Start with <a href="./solid-principles/">SOLID Principles examples</a></li><li>Move to <a href="./design-patterns/creational/">Creational Patterns</a></li><li>Practice with simple <a href="./case-studies/">Case Studies</a></li></ol><h3 id="for-intermediate-developers" tabindex="-1">For Intermediate Developers <a class="header-anchor" href="#for-intermediate-developers" aria-label="Permalink to &quot;For Intermediate Developers&quot;">​</a></h3><ol><li>Review <a href="./design-patterns/structural/">Structural Patterns</a></li><li>Master <a href="./design-patterns/behavioral/">Behavioral Patterns</a></li><li>Implement complex <a href="./case-studies/">Case Studies</a></li></ol><h3 id="for-advanced-practitioners" tabindex="-1">For Advanced Practitioners <a class="header-anchor" href="#for-advanced-practitioners" aria-label="Permalink to &quot;For Advanced Practitioners&quot;">​</a></h3><ol><li>Study pattern combinations in <a href="./case-studies/">Case Studies</a></li><li>Focus on performance and scalability aspects</li><li>Customize patterns for specific use cases</li></ol><h2 id="🛠️-code-quality-standards" tabindex="-1">🛠️ Code Quality Standards <a class="header-anchor" href="#🛠️-code-quality-standards" aria-label="Permalink to &quot;🛠️ Code Quality Standards&quot;">​</a></h2><p>All examples follow:</p><ul><li><strong>Clean Code</strong> principles</li><li><strong>Consistent naming</strong> conventions</li><li><strong>Comprehensive comments</strong> and documentation</li><li><strong>Error handling</strong> where appropriate</li><li><strong>Unit tests</strong> for core functionality</li></ul><h2 id="📝-contributing" tabindex="-1">📝 Contributing <a class="header-anchor" href="#📝-contributing" aria-label="Permalink to &quot;📝 Contributing&quot;">​</a></h2><p>Want to add more examples or improve existing ones?</p><ol><li>Follow the existing code style</li><li>Include comprehensive documentation</li><li>Add unit tests where applicable</li><li>Ensure examples are beginner-friendly</li></ol><hr><p>Ready to start coding? Pick a concept and dive into the examples!</p><p><strong>Happy Coding! 🎉</strong></p>`,35)])])}const m=s(l,[["render",r]]);export{h as __pageData,m as default};
