import{_ as o,c as t,o as s,ag as n}from"./chunks/framework.DUDLMHYb.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/3625-stone-removal-game/README.md","filePath":"DSA/Leetcode/3625-stone-removal-game/README.md"}'),a={name:"DSA/Leetcode/3625-stone-removal-game/README.md"};function r(l,e,p,i,c,m){return s(),t("div",null,[...e[0]||(e[0]=[n('<h2><a href="https://leetcode.com/problems/stone-removal-game">3625. Stone Removal Game</a></h2><h3>Easy</h3><hr><p>Alice and Bob are playing a game where they take turns removing stones from a pile, with <em>Alice going first</em>.</p><ul><li>Alice starts by removing <strong>exactly</strong> 10 stones on her first turn.</li><li>For each subsequent turn, each player removes <strong>exactly</strong> 1 fewer<strong></strong>stone<strong></strong>than the previous opponent.</li></ul><p>The player who cannot make a move loses the game.</p><p>Given a positive integer <code>n</code>, return <code>true</code> if Alice wins the game and <code>false</code> otherwise.</p><p> </p><p><strong class="example">Example 1:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">n = 12</span></p><p><strong>Output:</strong> <span class="example-io">true</span></p><p><strong>Explanation:</strong></p><ul><li>Alice removes 10 stones on her first turn, leaving 2 stones for Bob.</li><li>Bob cannot remove 9 stones, so Alice wins.</li></ul></div><p><strong class="example">Example 2:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">n = 1</span></p><p><strong>Output:</strong> <span class="example-io">false</span></p><p><strong>Explanation:</strong></p><ul><li>Alice cannot remove 10 stones, so Alice loses.</li></ul></div><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= n &lt;= 50</code></li></ul>',15)])])}const u=o(a,[["render",r]]);export{d as __pageData,u as default};
