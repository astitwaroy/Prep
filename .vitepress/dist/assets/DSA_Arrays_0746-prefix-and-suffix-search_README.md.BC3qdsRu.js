import{_ as t,c as o,o as r,ag as s}from"./chunks/framework.DUDLMHYb.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Arrays/0746-prefix-and-suffix-search/README.md","filePath":"DSA/Arrays/0746-prefix-and-suffix-search/README.md"}'),i={name:"DSA/Arrays/0746-prefix-and-suffix-search/README.md"};function n(d,e,a,l,c,u){return r(),o("div",null,[...e[0]||(e[0]=[s(`<h2><a href="https://leetcode.com/problems/prefix-and-suffix-search">746. Prefix and Suffix Search</a></h2><h3>Hard</h3><hr><p>Design a special dictionary that searches the words in it by a prefix and a suffix.</p><p>Implement the <code>WordFilter</code> class:</p><ul><li><code>WordFilter(string[] words)</code> Initializes the object with the <code>words</code> in the dictionary.</li><li><code>f(string pref, string suff)</code> Returns <em>the index of the word in the dictionary,</em> which has the prefix <code>pref</code> and the suffix <code>suff</code>. If there is more than one valid index, return <strong>the largest</strong> of them. If there is no such word in the dictionary, return <code>-1</code>.</li></ul><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input</strong>
[&quot;WordFilter&quot;, &quot;f&quot;]
[[[&quot;apple&quot;]], [&quot;a&quot;, &quot;e&quot;]]
<strong>Output</strong>
[null, 0]
<strong>Explanation</strong>
WordFilter wordFilter = new WordFilter([&quot;apple&quot;]);
wordFilter.f(&quot;a&quot;, &quot;e&quot;); // return 0, because the word at index 0 has prefix = &quot;a&quot; and suffix = &quot;e&quot;.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= words.length &lt;= 10<sup>4</sup></code></li><li><code>1 &lt;= words[i].length &lt;= 7</code></li><li><code>1 &lt;= pref.length, suff.length &lt;= 7</code></li><li><code>words[i]</code>, <code>pref</code> and <code>suff</code> consist of lowercase English letters only.</li><li>At most <code>10<sup>4</sup></code> calls will be made to the function <code>f</code>.</li></ul>`,12)])])}const h=t(i,[["render",n]]);export{p as __pageData,h as default};
