import{_ as t,c as r,o,ag as n}from"./chunks/framework.DUDLMHYb.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0515-find-largest-value-in-each-tree-row/README.md","filePath":"DSA/Leetcode/0515-find-largest-value-in-each-tree-row/README.md"}'),s={name:"DSA/Leetcode/0515-find-largest-value-in-each-tree-row/README.md"};function a(p,e,l,i,c,d){return o(),r("div",null,[...e[0]||(e[0]=[n(`<h2><a href="https://leetcode.com/problems/find-largest-value-in-each-tree-row">515. Find Largest Value in Each Tree Row</a></h2><h3>Medium</h3><hr><p>Given the <code>root</code> of a binary tree, return <em>an array of the largest value in each row</em> of the tree <strong>(0-indexed)</strong>.</p><p> </p><p><strong class="example">Example 1:</strong></p><img alt="" src="https://assets.leetcode.com/uploads/2020/08/21/largest_e1.jpg" style="width:300px;height:172px;"><pre><strong>Input:</strong> root = [1,3,2,5,3,null,9]
<strong>Output:</strong> [1,3,9]
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> root = [1,2,3]
<strong>Output:</strong> [1,3]
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li>The number of nodes in the tree will be in the range <code>[0, 10<sup>4</sup>]</code>.</li><li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li></ul>`,13)])])}const h=t(s,[["render",a]]);export{g as __pageData,h as default};
