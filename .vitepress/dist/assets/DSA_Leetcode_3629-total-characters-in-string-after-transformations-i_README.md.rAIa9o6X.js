import{_ as o,c as t,o as r,ag as c}from"./chunks/framework.DUDLMHYb.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/3629-total-characters-in-string-after-transformations-i/README.md","filePath":"DSA/Leetcode/3629-total-characters-in-string-after-transformations-i/README.md"}'),a={name:"DSA/Leetcode/3629-total-characters-in-string-after-transformations-i/README.md"};function i(n,e,s,d,l,h){return r(),t("div",null,[...e[0]||(e[0]=[c('<h2 id="_3629-total-characters-in-string-after-transformations-i" tabindex="-1">3629. Total Characters in String After Transformations I <a class="header-anchor" href="#_3629-total-characters-in-string-after-transformations-i" aria-label="Permalink to &quot;3629. Total Characters in String After Transformations I&quot;">​</a></h2><p><strong>Difficulty:</strong> Medium</p><hr><p>You are given a string <code>s</code> and an integer <code>t</code>, representing the number of <strong>transformations</strong> to perform. In one <strong>transformation</strong>, every character in <code>s</code> is replaced according to the following rules:</p><ul><li>If the character is <code>&#39;z&#39;</code>, replace it with the string <code>&quot;ab&quot;</code>.</li><li>Otherwise, replace it with the <strong>next</strong> character in the alphabet. For example, <code>&#39;a&#39;</code> is replaced with <code>&#39;b&#39;</code>, <code>&#39;b&#39;</code> is replaced with <code>&#39;c&#39;</code>, and so on.</li></ul><p>Return the <strong>length</strong> of the resulting string after <strong>exactly</strong> <code>t</code> transformations.</p><p>Since the answer may be very large, return it <strong>modulo</strong> <code>10^9 + 7</code>.</p><h3 id="example-1" tabindex="-1">Example 1: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example 1:&quot;">​</a></h3><p><strong>Input:</strong> <code>s = &quot;abcyy&quot;, t = 2</code></p><p><strong>Output:</strong> <code>7</code></p><p><strong>Explanation:</strong></p><ul><li><p><strong>First Transformation (t = 1)</strong>:</p><ul><li><code>&#39;a&#39;</code> becomes <code>&#39;b&#39;</code></li><li><code>&#39;b&#39;</code> becomes <code>&#39;c&#39;</code></li><li><code>&#39;c&#39;</code> becomes <code>&#39;d&#39;</code></li><li><code>&#39;y&#39;</code> becomes <code>&#39;z&#39;</code></li><li><code>&#39;y&#39;</code> becomes <code>&#39;z&#39;</code></li><li>String after the first transformation: <code>&quot;bcdzz&quot;</code></li></ul></li><li><p><strong>Second Transformation (t = 2)</strong>:</p><ul><li><code>&#39;b&#39;</code> becomes <code>&#39;c&#39;</code></li><li><code>&#39;c&#39;</code> becomes <code>&#39;d&#39;</code></li><li><code>&#39;d&#39;</code> becomes <code>&#39;e&#39;</code></li><li><code>&#39;z&#39;</code> becomes <code>&quot;ab&quot;</code></li><li><code>&#39;z&#39;</code> becomes <code>&quot;ab&quot;</code></li><li>String after the second transformation: <code>&quot;cdeabab&quot;</code></li></ul></li><li><p><strong>Final Length of the string</strong>: The string is <code>&quot;cdeabab&quot;</code>, which has 7 characters.</p></li></ul><h3 id="example-2" tabindex="-1">Example 2: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example 2:&quot;">​</a></h3><p><strong>Input:</strong> <code>s = &quot;azbk&quot;, t = 1</code></p><p><strong>Output:</strong> <code>5</code></p><p><strong>Explanation:</strong></p><ul><li><p><strong>First Transformation (t = 1)</strong>:</p><ul><li><code>&#39;a&#39;</code> becomes <code>&#39;b&#39;</code></li><li><code>&#39;z&#39;</code> becomes <code>&quot;ab&quot;</code></li><li><code>&#39;b&#39;</code> becomes <code>&#39;c&#39;</code></li><li><code>&#39;k&#39;</code> becomes <code>&#39;l&#39;</code></li><li>String after the first transformation: <code>&quot;babcl&quot;</code></li></ul></li><li><p><strong>Final Length of the string</strong>: The string is <code>&quot;babcl&quot;</code>, which has 5 characters.</p></li></ul><h3 id="constraints" tabindex="-1">Constraints: <a class="header-anchor" href="#constraints" aria-label="Permalink to &quot;Constraints:&quot;">​</a></h3><ul><li><code>1 &lt;= s.length &lt;= 10^5</code></li><li><code>s</code> consists only of lowercase English letters.</li><li><code>1 &lt;= t &lt;= 10^5</code></li></ul>',19)])])}const u=o(a,[["render",i]]);export{p as __pageData,u as default};
