import{_ as l,C as r,c as a,o as i,ag as d,j as e,a as o,G as b,w as p}from"./chunks/framework.DUDLMHYb.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Arrays/3649-minimum-time-to-break-locks-i/README.md","filePath":"DSA/Arrays/3649-minimum-time-to-break-locks-i/README.md"}'),n={name:"DSA/Arrays/3649-minimum-time-to-break-locks-i/README.md"};function c(k,t,x,y,h,u){const s=r("font");return i(),a("div",null,[t[5]||(t[5]=d('<h2><a href="https://leetcode.com/problems/minimum-time-to-break-locks-i">3649. Minimum Time to Break Locks I</a></h2><h3>Medium</h3><hr><p>Bob is stuck in a dungeon and must break <code>n</code> locks, each requiring some amount of <strong>energy</strong> to break. The required energy for each lock is stored in an array called <code>strength</code> where <code>strength[i]</code> indicates the energy needed to break the <code>i<sup>th</sup></code> lock.</p><p>To break a lock, Bob uses a sword with the following characteristics:</p>',5)),e("ul",null,[t[3]||(t[3]=e("li",null,"The initial energy of the sword is 0.",-1)),e("li",null,[t[1]||(t[1]=o("The initial factor ",-1)),e("code",null,[b(s,{face:"monospace"},{default:p(()=>[...t[0]||(t[0]=[o("x",-1)])]),_:1})]),t[2]||(t[2]=o(" by which the energy of the sword increases is 1.",-1))]),t[4]||(t[4]=d("<li>Every minute, the energy of the sword increases by the current factor <code>x</code>.</li><li>To break the <code>i<sup>th</sup></code> lock, the energy of the sword must reach <strong>at least</strong> <code>strength[i]</code>.</li><li>After breaking a lock, the energy of the sword resets to 0, and the factor <code>x</code> increases by a given value <code>k</code>.</li>",3))]),t[6]||(t[6]=d('<p>Your task is to determine the <strong>minimum</strong> time in minutes required for Bob to break all <code>n</code> locks and escape the dungeon.</p><p>Return the <strong>minimum </strong>time required for Bob to break all <code>n</code> locks.</p><p> </p><p><strong class="example">Example 1:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">strength = [3,4,1], k = 1</span></p><p><strong>Output:</strong> <span class="example-io">4</span></p><p><strong>Explanation:</strong></p><table style="border:1px solid black;"><tbody><tr><th style="border:1px solid black;">Time</th><th style="border:1px solid black;">Energy</th><th style="border:1px solid black;">x</th><th style="border:1px solid black;">Action</th><th style="border:1px solid black;">Updated x</th></tr><tr><td style="border:1px solid black;">0</td><td style="border:1px solid black;">0</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">Nothing</td><td style="border:1px solid black;">1</td></tr><tr><td style="border:1px solid black;">1</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">Break 3<sup>rd</sup> Lock</td><td style="border:1px solid black;">2</td></tr><tr><td style="border:1px solid black;">2</td><td style="border:1px solid black;">2</td><td style="border:1px solid black;">2</td><td style="border:1px solid black;">Nothing</td><td style="border:1px solid black;">2</td></tr><tr><td style="border:1px solid black;">3</td><td style="border:1px solid black;">4</td><td style="border:1px solid black;">2</td><td style="border:1px solid black;">Break 2<sup>nd</sup> Lock</td><td style="border:1px solid black;">3</td></tr><tr><td style="border:1px solid black;">4</td><td style="border:1px solid black;">3</td><td style="border:1px solid black;">3</td><td style="border:1px solid black;">Break 1<sup>st</sup> Lock</td><td style="border:1px solid black;">3</td></tr></tbody></table><p>The locks cannot be broken in less than 4 minutes; thus, the answer is 4.</p></div><p><strong class="example">Example 2:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">strength = [2,5,4], k = 2</span></p><p><strong>Output:</strong> <span class="example-io">5</span></p><p><strong>Explanation:</strong></p><table style="border:1px solid black;"><tbody><tr><th style="border:1px solid black;">Time</th><th style="border:1px solid black;">Energy</th><th style="border:1px solid black;">x</th><th style="border:1px solid black;">Action</th><th style="border:1px solid black;">Updated x</th></tr><tr><td style="border:1px solid black;">0</td><td style="border:1px solid black;">0</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">Nothing</td><td style="border:1px solid black;">1</td></tr><tr><td style="border:1px solid black;">1</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">Nothing</td><td style="border:1px solid black;">1</td></tr><tr><td style="border:1px solid black;">2</td><td style="border:1px solid black;">2</td><td style="border:1px solid black;">1</td><td style="border:1px solid black;">Break 1<sup>st</sup> Lock</td><td style="border:1px solid black;">3</td></tr><tr><td style="border:1px solid black;">3</td><td style="border:1px solid black;">3</td><td style="border:1px solid black;">3</td><td style="border:1px solid black;">Nothing</td><td style="border:1px solid black;">3</td></tr><tr><td style="border:1px solid black;">4</td><td style="border:1px solid black;">6</td><td style="border:1px solid black;">3</td><td style="border:1px solid black;">Break 2<sup>n</sup><sup>d</sup> Lock</td><td style="border:1px solid black;">5</td></tr><tr><td style="border:1px solid black;">5</td><td style="border:1px solid black;">5</td><td style="border:1px solid black;">5</td><td style="border:1px solid black;">Break 3<sup>r</sup><sup>d</sup> Lock</td><td style="border:1px solid black;">7</td></tr></tbody></table><p>The locks cannot be broken in less than 5 minutes; thus, the answer is 5.</p></div><p> </p><p><strong>Constraints:</strong></p><ul><li><code>n == strength.length</code></li><li><code>1 &lt;= n &lt;= 8</code></li><li><code>1 &lt;= K &lt;= 10</code></li><li><code>1 &lt;= strength[i] &lt;= 10<sup>6</sup></code></li></ul>',10))])}const _=l(n,[["render",c]]);export{g as __pageData,_ as default};
