import{_ as t,c as n,o,ag as r}from"./chunks/framework.DUDLMHYb.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0453-minimum-moves-to-equal-array-elements/README.md","filePath":"DSA/Leetcode/0453-minimum-moves-to-equal-array-elements/README.md"}'),s={name:"DSA/Leetcode/0453-minimum-moves-to-equal-array-elements/README.md"};function a(m,e,l,i,p,u){return o(),n("div",null,[...e[0]||(e[0]=[r(`<h2><a href="https://leetcode.com/problems/minimum-moves-to-equal-array-elements">453. Minimum Moves to Equal Array Elements</a></h2><h3>Medium</h3><hr><p>Given an integer array <code>nums</code> of size <code>n</code>, return <em>the minimum number of moves required to make all array elements equal</em>.</p><p>In one move, you can increment <code>n - 1</code> elements of the array by <code>1</code>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> nums = [1,2,3]
<strong>Output:</strong> 3
<strong>Explanation:</strong> Only three moves are needed (remember each move increments two elements):
[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> nums = [1,1,1]
<strong>Output:</strong> 0
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>n == nums.length</code></li><li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li><li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li><li>The answer is guaranteed to fit in a <strong>32-bit</strong> integer.</li></ul>`,13)])])}const g=t(s,[["render",a]]);export{d as __pageData,g as default};
