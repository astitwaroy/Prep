import{_ as t,C as r,c as p,o as i,ag as a,j as o,a as s,G as l,w as d}from"./chunks/framework.DUDLMHYb.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/3738-make-array-non-decreasing/README.md","filePath":"DSA/Leetcode/3738-make-array-non-decreasing/README.md"}'),m={name:"DSA/Leetcode/3738-make-array-non-decreasing/README.md"},c={class:"example-block"};function u(g,e,_,x,T,y){const n=r("font");return i(),p("div",null,[e[5]||(e[5]=a('<h2><a href="https://leetcode.com/problems/make-array-non-decreasing">3738. Make Array Non-decreasing</a></h2><h3>Medium</h3><hr><p>You are given an integer array <code>nums</code>. In one operation, you can select a <span data-keyword="subarray-nonempty">subarray</span> and replace it with a single element equal to its <strong>maximum</strong> value.</p><p>Return the <strong>maximum possible size</strong> of the array after performing zero or more operations such that the resulting array is <strong>non-decreasing</strong>.</p><p> </p><p><strong class="example">Example 1:</strong></p>',7)),o("div",c,[e[4]||(e[4]=a('<p><strong>Input:</strong> <span class="example-io">nums = [4,2,5,3,5]</span></p><p><strong>Output:</strong> <span class="example-io">3</span></p><p><strong>Explanation:</strong></p><p>One way to achieve the maximum size is:</p><ol><li>Replace subarray <code>nums[1..2] = [2, 5]</code> with <code>5</code> → <code>[4, 5, 3, 5]</code>.</li><li>Replace subarray <code>nums[2..3] = [3, 5]</code> with <code>5</code> → <code>[4, 5, 5]</code>.</li></ol>',5)),o("p",null,[e[1]||(e[1]=s("The final array ",-1)),e[2]||(e[2]=o("code",null,"[4, 5, 5]",-1)),e[3]||(e[3]=s(" is non-decreasing with size ",-1)),l(n,{face:"monospace"},{default:d(()=>[...e[0]||(e[0]=[s("3.",-1)])]),_:1})])]),e[6]||(e[6]=a('<p><strong class="example">Example 2:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">nums = [1,2,3]</span></p><p><strong>Output:</strong> <span class="example-io">3</span></p><p><strong>Explanation:</strong></p><p>No operation is needed as the array <code>[1,2,3]</code> is already non-decreasing.</p></div><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>5</sup></code></li><li><code>1 &lt;= nums[i] &lt;= 2 * 10<sup>5</sup></code></li></ul>',5))])}const E=t(m,[["render",u]]);export{A as __pageData,E as default};
