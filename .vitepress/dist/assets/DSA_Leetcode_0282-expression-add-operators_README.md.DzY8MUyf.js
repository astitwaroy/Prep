import{_ as e,c as o,o as n,ag as s}from"./chunks/framework.DUDLMHYb.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0282-expression-add-operators/README.md","filePath":"DSA/Leetcode/0282-expression-add-operators/README.md"}'),r={name:"DSA/Leetcode/0282-expression-add-operators/README.md"};function a(p,t,u,d,i,l){return n(),o("div",null,[...t[0]||(t[0]=[s(`<h2><a href="https://leetcode.com/problems/expression-add-operators">282. Expression Add Operators</a></h2><h3>Hard</h3><hr><p>Given a string <code>num</code> that contains only digits and an integer <code>target</code>, return <em><strong>all possibilities</strong> to insert the binary operators </em><code>&#39;+&#39;</code><em>, </em><code>&#39;-&#39;</code><em>, and/or </em><code>&#39;*&#39;</code><em> between the digits of </em><code>num</code><em> so that the resultant expression evaluates to the </em><code>target</code><em> value</em>.</p><p>Note that operands in the returned expressions <strong>should not</strong> contain leading zeros.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> num = &quot;123&quot;, target = 6
<strong>Output:</strong> [&quot;1*2*3&quot;,&quot;1+2+3&quot;]
<strong>Explanation:</strong> Both &quot;1*2*3&quot; and &quot;1+2+3&quot; evaluate to 6.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> num = &quot;232&quot;, target = 8
<strong>Output:</strong> [&quot;2*3+2&quot;,&quot;2+3*2&quot;]
<strong>Explanation:</strong> Both &quot;2*3+2&quot; and &quot;2+3*2&quot; evaluate to 8.
</pre><p><strong class="example">Example 3:</strong></p><pre><strong>Input:</strong> num = &quot;3456237490&quot;, target = 9191
<strong>Output:</strong> []
<strong>Explanation:</strong> There are no expressions that can be created from &quot;3456237490&quot; to evaluate to 9191.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= num.length &lt;= 10</code></li><li><code>num</code> consists of only digits.</li><li><code>-2<sup>31</sup> &lt;= target &lt;= 2<sup>31</sup> - 1</code></li></ul>`,15)])])}const m=e(r,[["render",a]]);export{g as __pageData,m as default};
