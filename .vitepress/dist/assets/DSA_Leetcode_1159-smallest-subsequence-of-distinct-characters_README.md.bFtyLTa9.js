import{_ as t,c as s,o,ag as a}from"./chunks/framework.DUDLMHYb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/1159-smallest-subsequence-of-distinct-characters/README.md","filePath":"DSA/Leetcode/1159-smallest-subsequence-of-distinct-characters/README.md"}'),c={name:"DSA/Leetcode/1159-smallest-subsequence-of-distinct-characters/README.md"};function r(n,e,l,p,i,m){return o(),s("div",null,[...e[0]||(e[0]=[a(`<h2><a href="https://leetcode.com/problems/smallest-subsequence-of-distinct-characters">1159. Smallest Subsequence of Distinct Characters</a></h2><h3>Medium</h3><hr><p>Given a string <code>s</code>, return <em>the </em><span data-keyword="lexicographically-smaller-string"><em>lexicographically smallest</em></span> <span data-keyword="subsequence-string"><em>subsequence</em></span><em> of</em> <code>s</code> <em>that contains all the distinct characters of</em> <code>s</code> <em>exactly once</em>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> s = &quot;bcabc&quot;
<strong>Output:</strong> &quot;abc&quot;
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> s = &quot;cbacdcbc&quot;
<strong>Output:</strong> &quot;acdb&quot;
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 1000</code></li><li><code>s</code> consists of lowercase English letters.</li></ul><p> </p><strong>Note:</strong> This question is the same as 316: <a href="https://leetcode.com/problems/remove-duplicate-letters/" target="_blank">https://leetcode.com/problems/remove-duplicate-letters/</a>`,16)])])}const h=t(c,[["render",r]]);export{u as __pageData,h as default};
