import{_ as o,c as r,o as t,ag as a}from"./chunks/framework.DUDLMHYb.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/3643-zero-array-transformation-ii/README.md","filePath":"DSA/Leetcode/3643-zero-array-transformation-ii/README.md"}'),i={name:"DSA/Leetcode/3643-zero-array-transformation-ii/README.md"};function l(n,e,c,s,d,u){return t(),r("div",null,[...e[0]||(e[0]=[a('<h2 id="_3643-zero-array-transformation-ii" tabindex="-1">3643. Zero Array Transformation II <a class="header-anchor" href="#_3643-zero-array-transformation-ii" aria-label="Permalink to &quot;3643. Zero Array Transformation II&quot;">​</a></h2><p><strong>Difficulty:</strong> Medium</p><hr><p>You are given an integer array <code>nums</code> of length <code>n</code> and a 2D array <code>queries</code> where <code>queries[i] = [lᵢ, rᵢ, valᵢ]</code>.</p><p>Each <code>queries[i]</code> represents the following action on <code>nums</code>:</p><ul><li>Decrement the value at each index in the range <code>[lᵢ, rᵢ]</code> in <code>nums</code> by <strong>at most</strong> <code>valᵢ</code>.</li><li>The amount by which each value is decremented can be chosen <strong>independently</strong> for each index.</li></ul><p>A <strong>Zero Array</strong> is an array with all its elements equal to 0.</p><p>Return the <strong>minimum</strong> possible <strong>non-negative</strong> value of <code>k</code>, such that after processing the first <code>k</code> queries in <strong>sequence</strong>, <code>nums</code> becomes a <strong>Zero Array</strong>. If no such <code>k</code> exists, return -1.</p><h3 id="example-1" tabindex="-1">Example 1: <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example 1:&quot;">​</a></h3><p><strong>Input:</strong> <code>nums = [2,0,2], queries = [[0,2,1],[0,2,1],[1,1,3]]</code></p><p><strong>Output:</strong> <code>2</code></p><p><strong>Explanation:</strong></p><ul><li><strong>For i = 0 (l = 0, r = 2, val = 1):</strong><ul><li>Decrement values at indices <code>[0, 1, 2]</code> by <code>[1, 0, 1]</code> respectively.</li><li>The array will become <code>[1, 0, 1]</code>.</li></ul></li><li><strong>For i = 1 (l = 0, r = 2, val = 1):</strong><ul><li>Decrement values at indices <code>[0, 1, 2]</code> by <code>[1, 0, 1]</code> respectively.</li><li>The array will become <code>[0, 0, 0]</code>, which is a Zero Array. Therefore, the minimum value of <code>k</code> is 2.</li></ul></li></ul><h3 id="example-2" tabindex="-1">Example 2: <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example 2:&quot;">​</a></h3><p><strong>Input:</strong> <code>nums = [4,3,2,1], queries = [[1,3,2],[0,2,1]]</code></p><p><strong>Output:</strong> <code>-1</code></p><p><strong>Explanation:</strong></p><ul><li><strong>For i = 0 (l = 1, r = 3, val = 2):</strong><ul><li>Decrement values at indices <code>[1, 2, 3]</code> by <code>[2, 2, 1]</code> respectively.</li><li>The array will become <code>[4, 1, 0, 0]</code>.</li></ul></li><li><strong>For i = 1 (l = 0, r = 2, val = 1):</strong><ul><li>Decrement values at indices <code>[0, 1, 2]</code> by <code>[1, 1, 0]</code> respectively.</li><li>The array will become <code>[3, 0, 0, 0]</code>, which is not a Zero Array.</li></ul></li></ul><h3 id="constraints" tabindex="-1">Constraints: <a class="header-anchor" href="#constraints" aria-label="Permalink to &quot;Constraints:&quot;">​</a></h3><ul><li><code>1 &lt;= nums.length &lt;= 10^5</code></li><li><code>0 &lt;= nums[i] &lt;= 5 * 10^5</code></li><li><code>1 &lt;= queries.length &lt;= 10^5</code></li><li><code>queries[i].length == 3</code></li><li><code>0 &lt;= lᵢ &lt;= rᵢ &lt; nums.length</code></li><li><code>1 &lt;= valᵢ &lt;= 5</code></li></ul>',20)])])}const p=o(i,[["render",l]]);export{h as __pageData,p as default};
