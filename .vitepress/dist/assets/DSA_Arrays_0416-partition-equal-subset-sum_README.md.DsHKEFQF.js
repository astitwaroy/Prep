import{_ as e,c as s,o as n,ag as r}from"./chunks/framework.DUDLMHYb.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Arrays/0416-partition-equal-subset-sum/README.md","filePath":"DSA/Arrays/0416-partition-equal-subset-sum/README.md"}'),a={name:"DSA/Arrays/0416-partition-equal-subset-sum/README.md"};function o(p,t,u,i,l,m){return n(),s("div",null,[...t[0]||(t[0]=[r(`<h2><a href="https://leetcode.com/problems/partition-equal-subset-sum">416. Partition Equal Subset Sum</a></h2><h3>Medium</h3><hr><p>Given an integer array <code>nums</code>, return <code>true</code> <em>if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or </em><code>false</code><em> otherwise</em>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> nums = [1,5,11,5]
<strong>Output:</strong> true
<strong>Explanation:</strong> The array can be partitioned as [1, 5, 5] and [11].
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> nums = [1,2,3,5]
<strong>Output:</strong> false
<strong>Explanation:</strong> The array cannot be partitioned into equal sum subsets.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 200</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li></ul>`,12)])])}const g=e(a,[["render",o]]);export{d as __pageData,g as default};
