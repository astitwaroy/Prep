import{_ as e,c as t,o,ag as a}from"./chunks/framework.DUDLMHYb.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/DFS/0854-making-a-large-island/README.md","filePath":"DSA/DFS/0854-making-a-large-island/README.md"}'),r={name:"DSA/DFS/0854-making-a-large-island/README.md"};function s(g,n,i,d,l,p){return o(),t("div",null,[...n[0]||(n[0]=[a(`<h2><a href="https://leetcode.com/problems/making-a-large-island">854. Making A Large Island</a></h2><h3>Hard</h3><hr><p>You are given an <code>n x n</code> binary matrix <code>grid</code>. You are allowed to change <strong>at most one</strong> <code>0</code> to be <code>1</code>.</p><p>Return <em>the size of the largest <strong>island</strong> in</em> <code>grid</code> <em>after applying this operation</em>.</p><p>An <strong>island</strong> is a 4-directionally connected group of <code>1</code>s.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> grid = [[1,0],[0,1]]
<strong>Output:</strong> 3
<strong>Explanation:</strong> Change one 0 to 1 and connect two 1s, then we get an island with area = 3.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> grid = [[1,1],[1,0]]
<strong>Output:</strong> 4
<strong>Explanation: </strong>Change the 0 to 1 and make the island bigger, only one island with area = 4.</pre><p><strong class="example">Example 3:</strong></p><pre><strong>Input:</strong> grid = [[1,1],[1,1]]
<strong>Output:</strong> 4
<strong>Explanation:</strong> Can&#39;t change any 0 to 1, only one island with area = 4.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>n == grid.length</code></li><li><code>n == grid[i].length</code></li><li><code>1 &lt;= n &lt;= 500</code></li><li><code>grid[i][j]</code> is either <code>0</code> or <code>1</code>.</li></ul>`,16)])])}const h=e(r,[["render",s]]);export{m as __pageData,h as default};
