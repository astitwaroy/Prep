import{_ as s,C as o,c as a,o as r,ag as p,j as t,G as l,w as i,a as u}from"./chunks/framework.DUDLMHYb.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/3685-count-subarrays-of-length-three-with-a-condition/README.md","filePath":"DSA/Leetcode/3685-count-subarrays-of-length-three-with-a-condition/README.md"}'),c={name:"DSA/Leetcode/3685-count-subarrays-of-length-three-with-a-condition/README.md"};function d(m,e,h,g,f,b){const n=o("font");return r(),a("div",null,[e[2]||(e[2]=p('<h2><a href="https://leetcode.com/problems/count-subarrays-of-length-three-with-a-condition">3685. Count Subarrays of Length Three With a Condition</a></h2><h3>Easy</h3><hr><p>Given an integer array <code>nums</code>, return the number of subarrays<em></em>of length 3 such that the sum of the first and third numbers equals <em>exactly</em> half of the second number.</p><p>A <strong>subarray</strong> is a contiguous <b>non-empty</b> sequence of elements within an array.</p><p> </p><p><strong class="example">Example 1:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">nums = [1,2,1,4,1]</span></p><p><strong>Output:</strong> <span class="example-io">1</span></p><p><strong>Explanation:</strong></p><p>Only the subarray <code>[1,4,1]</code> contains exactly 3 elements where the sum of the first and third numbers equals half the middle number.</p></div><p><strong class="example">Example 2:</strong></p><div class="example-block"><p><strong>Input:</strong> <span class="example-io">nums = [1,1,1]</span></p><p><strong>Output:</strong> <span class="example-io">0</span></p><p><strong>Explanation:</strong></p><p><code>[1,1,1]</code> is the only subarray of length 3. However, its first and third numbers do not add to half the middle number.</p></div><p> </p><p><strong>Constraints:</strong></p>',12)),t("ul",null,[e[1]||(e[1]=t("li",null,[t("code",null,"3 <= nums.length <= 100")],-1)),t("li",null,[t("code",null,[l(n,{face:"monospace"},{default:i(()=>[...e[0]||(e[0]=[u("-100 <= nums[i] <= 100",-1)])]),_:1})])])])])}const y=s(c,[["render",d]]);export{x as __pageData,y as default};
