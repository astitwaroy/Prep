import{_ as t,c as n,o as r,ag as s}from"./chunks/framework.DUDLMHYb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/2610-closest-prime-numbers-in-range/README.md","filePath":"DSA/Leetcode/2610-closest-prime-numbers-in-range/README.md"}'),o={name:"DSA/Leetcode/2610-closest-prime-numbers-in-range/README.md"};function i(a,e,p,c,l,m){return r(),n("div",null,[...e[0]||(e[0]=[s(`<h2><a href="https://leetcode.com/problems/closest-prime-numbers-in-range">2610. Closest Prime Numbers in Range</a></h2><h3>Medium</h3><hr><p>Given two positive integers <code>left</code> and <code>right</code>, find the two integers <code>num1</code> and <code>num2</code> such that:</p><ul><li><code>left &lt;= num1 &lt; num2 &lt;= right </code>.</li><li>Both <code>num1</code> and <code>num2</code> are <span data-keyword="prime-number">prime numbers</span>.</li><li><code>num2 - num1</code> is the <strong>minimum</strong> amongst all other pairs satisfying the above conditions.</li></ul><p>Return the positive integer array <code>ans = [num1, num2]</code>. If there are multiple pairs satisfying these conditions, return the one with the <strong>smallest</strong> <code>num1</code> value. If no such numbers exist, return <code>[-1, -1]</code><em>.</em></p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> left = 10, right = 19
<strong>Output:</strong> [11,13]
<strong>Explanation:</strong> The prime numbers between 10 and 19 are 11, 13, 17, and 19.
The closest gap between any pair is 2, which can be achieved by [11,13] or [17,19].
Since 11 is smaller than 17, we return the first pair.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> left = 4, right = 6
<strong>Output:</strong> [-1,-1]
<strong>Explanation:</strong> There exists only one prime number in the given range, so the conditions cannot be satisfied.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= left &lt;= right &lt;= 10<sup>6</sup></code></li></ul><p> </p>`,15)])])}const g=t(o,[["render",i]]);export{u as __pageData,g as default};
