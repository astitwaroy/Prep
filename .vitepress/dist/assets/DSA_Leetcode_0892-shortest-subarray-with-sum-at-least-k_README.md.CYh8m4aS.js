import{_ as s,c as e,o as r,ag as o}from"./chunks/framework.DUDLMHYb.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0892-shortest-subarray-with-sum-at-least-k/README.md","filePath":"DSA/Leetcode/0892-shortest-subarray-with-sum-at-least-k/README.md"}'),n={name:"DSA/Leetcode/0892-shortest-subarray-with-sum-at-least-k/README.md"};function a(p,t,u,l,c,g){return r(),e("div",null,[...t[0]||(t[0]=[o(`<h2><a href="https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k">892. Shortest Subarray with Sum at Least K</a></h2><h3>Hard</h3><hr><p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the length of the shortest non-empty <strong>subarray</strong> of </em><code>nums</code><em> with a sum of at least </em><code>k</code>. If there is no such <strong>subarray</strong>, return <code>-1</code>.</p><p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> nums = [1], k = 1
<strong>Output:</strong> 1
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> nums = [1,2], k = 4
<strong>Output:</strong> -1
</pre><p><strong class="example">Example 3:</strong></p><pre><strong>Input:</strong> nums = [2,-1,2], k = 3
<strong>Output:</strong> 3
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li><li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li><li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li></ul>`,15)])])}const i=s(n,[["render",a]]);export{d as __pageData,i as default};
