import{_ as k,C as d,c as o,o as n,a4 as t,b as p,j as a,w as i,a as e,G as r,a5 as h}from"./chunks/framework.BTsuxa0O.js";const C=JSON.parse('{"title":"What is Low-Level Design (LLD)?","description":"","frontmatter":{},"headers":[],"relativePath":"LLD/01-fundamentals/01-what-is-lld.md","filePath":"LLD/01-fundamentals/01-what-is-lld.md"}'),c={name:"LLD/01-fundamentals/01-what-is-lld.md"},E={align:"center"},g={align:"center"},u={align:"center"};function b(y,s,m,A,F,D){const l=d("Mermaid");return n(),o("div",null,[s[5]||(s[5]=t('<p>🧑‍💻 <strong>Author:</strong> RK ROY</p><h1 id="what-is-low-level-design-lld" tabindex="-1">What is Low-Level Design (LLD)? <a class="header-anchor" href="#what-is-low-level-design-lld" aria-label="Permalink to &quot;What is Low-Level Design (LLD)?&quot;">​</a></h1><h2 id="🎯-overview" tabindex="-1">🎯 Overview <a class="header-anchor" href="#🎯-overview" aria-label="Permalink to &quot;🎯 Overview&quot;">​</a></h2><ul><li><strong>Low-Level Design (LLD)</strong> is the process of designing the internal components of a software system. It focuses on the detailed design of individual classes, interfaces, methods, and their interactions to implement the requirements specified in the High-Level Design.</li><li><strong>Low-Level Design (LLD)</strong> is the process of translating abstract ideas into concrete implementation</li><li>It’s where you translate <strong>High-Level Design (HLD)</strong> into detailed class diagrams, interfaces, object relationships, and design patterns.</li></ul><h2 id="🏗️-high-level-vs-low-level-design" tabindex="-1">🏗️ High-Level vs Low-Level Design <a class="header-anchor" href="#🏗️-high-level-vs-low-level-design" aria-label="Permalink to &quot;🏗️ High-Level vs Low-Level Design&quot;">​</a></h2>',5)),(n(),p(h,null,{default:i(()=>[r(l,{id:"mermaid-29",class:"mermaid my-class",graph:"graph%20TD%0A%20%20%20%20A%5BRequirements%5D%20--%3E%20B%5BHigh-Level%20Design%5D%0A%20%20%20%20B%20--%3E%20C%5BLow-Level%20Design%5D%0A%20%20%20%20C%20--%3E%20D%5BImplementation%5D%0A%0A%20%20%20%20B%20--%3E%20E%5BSystem%20Architecture%5D%0A%20%20%20%20B%20--%3E%20F%5BComponent%20Design%5D%0A%20%20%20%20B%20--%3E%20G%5BDatabase%20Design%5D%0A%0A%20%20%20%20C%20--%3E%20H%5BClass%20Design%5D%0A%20%20%20%20C%20--%3E%20I%5BMethod%20Design%5D%0A%20%20%20%20C%20--%3E%20J%5BInterface%20Design%5D%0A%20%20%20%20C%20--%3E%20K%5BDesign%20Patterns%5D%0A"})]),fallback:i(()=>[...s[0]||(s[0]=[e(" Loading... ",-1)])]),_:1})),s[6]||(s[6]=t(`<blockquote><h3 id="high-level-design-hld" tabindex="-1">High-Level Design (HLD) <a class="header-anchor" href="#high-level-design-hld" aria-label="Permalink to &quot;High-Level Design (HLD)&quot;">​</a></h3></blockquote><ul><li><strong>Focus</strong>: System architecture and major components</li><li><strong>Scope</strong>: Overall system structure</li><li><strong>Audience</strong>: Architects, stakeholders, project managers</li><li><strong>Examples</strong>: <ul><li>Microservices architecture</li><li>Database selection</li><li>Technology stack decisions</li><li>System integration points</li></ul></li></ul><blockquote><h3 id="low-level-design-lld" tabindex="-1">Low-Level Design (LLD) <a class="header-anchor" href="#low-level-design-lld" aria-label="Permalink to &quot;Low-Level Design (LLD)&quot;">​</a></h3></blockquote><ul><li><strong>Focus</strong>: Detailed implementation of components</li><li><strong>Scope</strong>: Classes, methods, and their relationships</li><li><strong>Audience</strong>: Developers, implementers</li><li><strong>Examples</strong>: <ul><li>Class diagrams with methods and attributes</li><li>Sequence diagrams for interactions</li><li>Design patterns implementation</li><li>Data structures and algorithms</li></ul></li></ul><h2 id="🎨-key-components-of-lld-read-oop-first-you-will-find-it-in-the-same-repo" tabindex="-1">🎨 Key Components of LLD (read oop first, you will find it in the same repo) <a class="header-anchor" href="#🎨-key-components-of-lld-read-oop-first-you-will-find-it-in-the-same-repo" aria-label="Permalink to &quot;🎨 Key Components of LLD (read oop first, you will find it in the same repo)&quot;">​</a></h2><blockquote><h3 id="_1-classes-and-objects" tabindex="-1">1. Classes and Objects <a class="header-anchor" href="#_1-classes-and-objects" aria-label="Permalink to &quot;1. Classes and Objects&quot;">​</a></h3></blockquote><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example: User class design</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String userId;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String username;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String email;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserRole role;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">userId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, UserRole </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.role </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> role;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> hasPermission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Permission </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">permission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> role.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasPermission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(permission);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValidEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newEmail)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newEmail;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isValidEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Email validation logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><blockquote><h3 id="_2-interfaces-and-abstractions" tabindex="-1">2. Interfaces and Abstractions <a class="header-anchor" href="#_2-interfaces-and-abstractions" aria-label="Permalink to &quot;2. Interfaces and Abstractions&quot;">​</a></h3></blockquote><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Interface defining contract</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentProcessor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PaymentResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">processPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PaymentRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refundPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transactionId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PaymentStatus </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPaymentStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transactionId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Concrete implementation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreditCardProcessor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentProcessor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PaymentResult </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">processPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PaymentRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Credit card specific processing logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PaymentResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Transaction successful&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> refundPayment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transactionId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Refund logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PaymentStatus </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPaymentStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">transactionId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Status check logic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PaymentStatus.COMPLETED;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><h3 id="_3-class-relationships" tabindex="-1">3. Class Relationships <a class="header-anchor" href="#_3-class-relationships" aria-label="Permalink to &quot;3. Class Relationships&quot;">​</a></h3></blockquote>`,10)),a("div",E,[(n(),p(h,null,{default:i(()=>[r(l,{id:"mermaid-149",class:"mermaid my-class",graph:"classDiagram%0A%20%20%20%20class%20User%20%7B%0A%20%20%20%20%20%20userId%20%3A%20String%0A%20%20%20%20%20%20username%20%3A%20String%0A%20%20%20%20%20%20email%20%3A%20String%0A%20%20%20%20%20%20%2Blogin()%0A%20%20%20%20%20%20%2Blogout()%0A%20%20%20%20%20%20%2BupdateProfile()%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Order%20%7B%0A%20%20%20%20%20%20orderId%20%3A%20String%0A%20%20%20%20%20%20orderDate%20%3A%20Date%0A%20%20%20%20%20%20status%20%3A%20OrderStatus%0A%20%20%20%20%20%20%2BcalculateTotal()%0A%20%20%20%20%20%20%2BupdateStatus()%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Product%20%7B%0A%20%20%20%20%20%20productId%20%3A%20String%0A%20%20%20%20%20%20name%20%3A%20String%0A%20%20%20%20%20%20price%20%3A%20double%0A%20%20%20%20%20%20%2BgetDetails()%0A%20%20%20%20%20%20%2BupdatePrice()%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20OrderItem%20%7B%0A%20%20%20%20%20%20quantity%20%3A%20int%0A%20%20%20%20%20%20unitPrice%20%3A%20double%0A%20%20%20%20%20%20%2BcalculateSubtotal()%0A%20%20%20%20%7D%0A%0A%20%20%20%20User%20%221%22%20--%3E%20%220..*%22%20Order%20%3A%20places%0A%20%20%20%20Order%20%221%22%20--%3E%20%221..*%22%20OrderItem%20%3A%20contains%0A%20%20%20%20OrderItem%20%221%22%20--%3E%20%221%22%20Product%20%3A%20product%0A"})]),fallback:i(()=>[...s[1]||(s[1]=[e(" Loading... ",-1)])]),_:1}))]),s[7]||(s[7]=t('<h2 id="🛠️-lld-artifacts" tabindex="-1">🛠️ LLD Artifacts <a class="header-anchor" href="#🛠️-lld-artifacts" aria-label="Permalink to &quot;🛠️ LLD Artifacts&quot;">​</a></h2><blockquote><h3 id="_1-class-diagrams" tabindex="-1">1. Class Diagrams <a class="header-anchor" href="#_1-class-diagrams" aria-label="Permalink to &quot;1. Class Diagrams&quot;">​</a></h3></blockquote><p>Show the static structure of classes and their relationships.</p><blockquote><h3 id="_2-sequence-diagrams" tabindex="-1">2. Sequence Diagrams <a class="header-anchor" href="#_2-sequence-diagrams" aria-label="Permalink to &quot;2. Sequence Diagrams&quot;">​</a></h3></blockquote><p>Illustrate how objects interact over time.</p>',5)),(n(),p(h,null,{default:i(()=>[r(l,{id:"mermaid-170",class:"mermaid my-class",graph:"sequenceDiagram%0A%20%20%20%20participant%20C%20as%20Client%0A%20%20%20%20participant%20O%20as%20OrderService%0A%20%20%20%20participant%20P%20as%20PaymentService%0A%20%20%20%20participant%20I%20as%20InventoryService%0A%0A%20%20%20%20C-%3E%3EO%3A%20createOrder(orderRequest)%0A%20%20%20%20O-%3E%3EI%3A%20checkAvailability(productId)%0A%20%20%20%20I--%3E%3EO%3A%20availability%20response%0A%20%20%20%20O-%3E%3EP%3A%20processPayment(paymentInfo)%0A%20%20%20%20P--%3E%3EO%3A%20payment%20result%0A%20%20%20%20O-%3E%3EI%3A%20reserveItems(orderItems)%0A%20%20%20%20I--%3E%3EO%3A%20reservation%20confirmation%0A%20%20%20%20O--%3E%3EC%3A%20order%20confirmation%0A"})]),fallback:i(()=>[...s[2]||(s[2]=[e(" Loading... ",-1)])]),_:1})),s[8]||(s[8]=a("blockquote",null,[a("h3",{id:"_3-state-diagrams",tabindex:"-1"},[e("3. State Diagrams "),a("a",{class:"header-anchor",href:"#_3-state-diagrams","aria-label":'Permalink to "3. State Diagrams"'},"​")])],-1)),s[9]||(s[9]=a("p",null,"Show the different states an object can be in.",-1)),a("div",g,[(n(),p(h,null,{default:i(()=>[r(l,{id:"mermaid-180",class:"mermaid my-class",graph:"stateDiagram-v2%0A%20%20%20%20%5B*%5D%20--%3E%20Created%0A%20%20%20%20Created%20--%3E%20Pending%20%3A%20submit()%0A%20%20%20%20Pending%20--%3E%20Processing%20%3A%20approve()%0A%20%20%20%20Pending%20--%3E%20Cancelled%20%3A%20cancel()%0A%20%20%20%20Processing%20--%3E%20Shipped%20%3A%20ship()%0A%20%20%20%20Processing%20--%3E%20Cancelled%20%3A%20cancel()%0A%20%20%20%20Shipped%20--%3E%20Delivered%20%3A%20deliver()%0A%20%20%20%20Delivered%20--%3E%20%5B*%5D%0A%20%20%20%20Cancelled%20--%3E%20%5B*%5D%0A"})]),fallback:i(()=>[...s[3]||(s[3]=[e(" Loading... ",-1)])]),_:1}))]),s[10]||(s[10]=t('<h2 id="🎯-why-is-lld-important" tabindex="-1">🎯 Why is LLD Important? <a class="header-anchor" href="#🎯-why-is-lld-important" aria-label="Permalink to &quot;🎯 Why is LLD Important?&quot;">​</a></h2><blockquote><h3 id="_1-code-quality" tabindex="-1">1. <strong>Code Quality</strong> <a class="header-anchor" href="#_1-code-quality" aria-label="Permalink to &quot;1. **Code Quality**&quot;">​</a></h3></blockquote><ul><li>Ensures clean, maintainable code</li><li>Reduces technical debt</li><li>Improves readability</li></ul><blockquote><h3 id="_2-team-communication" tabindex="-1">2. <strong>Team Communication</strong> <a class="header-anchor" href="#_2-team-communication" aria-label="Permalink to &quot;2. **Team Communication**&quot;">​</a></h3></blockquote><ul><li>Clear documentation for developers</li><li>Consistent understanding across team</li><li>Easier knowledge transfer</li></ul><blockquote><h3 id="_3-risk-mitigation" tabindex="-1">3. <strong>Risk Mitigation</strong> <a class="header-anchor" href="#_3-risk-mitigation" aria-label="Permalink to &quot;3. **Risk Mitigation**&quot;">​</a></h3></blockquote><ul><li>Identifies potential issues early</li><li>Reduces implementation bugs</li><li>Facilitates code reviews</li></ul><blockquote><h3 id="_4-scalability" tabindex="-1">4. <strong>Scalability</strong> <a class="header-anchor" href="#_4-scalability" aria-label="Permalink to &quot;4. **Scalability**&quot;">​</a></h3></blockquote><ul><li>Designs systems that can grow</li><li>Identifies bottlenecks early</li><li>Plans for future requirements</li></ul><blockquote><h3 id="_5-maintainability" tabindex="-1">5. <strong>Maintainability</strong> <a class="header-anchor" href="#_5-maintainability" aria-label="Permalink to &quot;5. **Maintainability**&quot;">​</a></h3></blockquote><ul><li>A well-designed system is easy to read, debug, and extend. When components have clear responsibilities and clean interfaces, you can make changes without fear of breaking unrelated parts of the system.</li></ul><blockquote><h3 id="_6-reusability" tabindex="-1">6. <strong>Reusability</strong> <a class="header-anchor" href="#_6-reusability" aria-label="Permalink to &quot;6. **Reusability**&quot;">​</a></h3></blockquote><ul><li>When you design modules with well-thought-out responsibilities and abstractions, those modules can often be reused in different parts of your codebase or even across projects.</li></ul><h2 id="🚀-lld-process-overview" tabindex="-1">🚀 LLD Process Overview <a class="header-anchor" href="#🚀-lld-process-overview" aria-label="Permalink to &quot;🚀 LLD Process Overview&quot;">​</a></h2>',14)),a("div",u,[(n(),p(h,null,{default:i(()=>[r(l,{id:"mermaid-301",class:"mermaid my-class",graph:"flowchart%20TD%0A%20%20%20%20A%5BUnderstand%20Requirements%5D%20--%3E%20B%5BIdentify%20Objects%5D%0A%20%20%20%20B%20--%3E%20C%5BDefine%20Responsibilities%5D%0A%20%20%20%20C%20--%3E%20D%5BEstablish%20Relationships%5D%0A%20%20%20%20D%20--%3E%20E%5BApply%20Design%20Patterns%5D%0A%20%20%20%20E%20--%3E%20F%5BCreate%20Detailed%20Design%5D%0A%20%20%20%20F%20--%3E%20G%5BReview%20and%20Validate%5D%0A%20%20%20%20G%20--%3E%20H%5BImplementation%20Ready%5D%0A%0A%20%20%20%20style%20A%20fill%3A%23e1f5fe%0A%20%20%20%20style%20H%20fill%3A%23c8e6c9%0A"})]),fallback:i(()=>[...s[4]||(s[4]=[e(" Loading... ",-1)])]),_:1}))]),s[11]||(s[11]=t(`<blockquote><h3 id="step-by-step-process" tabindex="-1">Step-by-Step Process <a class="header-anchor" href="#step-by-step-process" aria-label="Permalink to &quot;Step-by-Step Process&quot;">​</a></h3></blockquote><ol><li><strong>Analyze Requirements</strong>: Understand what needs to be built</li><li><strong>Identify Entities</strong>: Find the main objects/classes</li><li><strong>Define Responsibilities</strong>: Determine what each class should do</li><li><strong>Establish Relationships</strong>: How classes interact</li><li><strong>Apply Patterns</strong>: Use proven design solutions</li><li><strong>Detail the Design</strong>: Methods, attributes, interfaces</li><li><strong>Validate</strong>: Review with stakeholders and team</li></ol><h2 id="🔍-real-world-example-e-commerce-cart-system" tabindex="-1">🔍 Real-World Example: E-commerce Cart System <a class="header-anchor" href="#🔍-real-world-example-e-commerce-cart-system" aria-label="Permalink to &quot;🔍 Real-World Example: E-commerce Cart System&quot;">​</a></h2><p>Let&#39;s see how LLD applies to a shopping cart:</p><blockquote><h3 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h3></blockquote><ul><li>Users can add/remove items from cart</li><li>Calculate total with taxes and discounts</li><li>Support different payment methods</li><li>Handle inventory management</li></ul><blockquote><h3 id="lld-approach" tabindex="-1">LLD Approach <a class="header-anchor" href="#lld-approach" aria-label="Permalink to &quot;LLD Approach&quot;">​</a></h3></blockquote><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Main entities identified</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ShoppingCart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String cartId;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String userId;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; items;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DiscountStrategy discountStrategy;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Product </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">product</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> quantity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        CartItem existingItem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> findItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(product.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (existingItem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            existingItem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateQuantity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(existingItem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getQuantity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quantity);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            items.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(product, quantity));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">productId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        items.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeIf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProduct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(productId));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> calculateTotal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtotal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mapToDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CartItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getSubtotal)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> discountStrategy.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyDiscount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(subtotal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Product product;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quantity;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getSubtotal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> product.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quantity;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Strategy pattern for discounts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DiscountStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> applyDiscount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PercentageDiscount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DiscountStrategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> percentage;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> applyDiscount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> percentage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="📚-key-principles-in-lld" tabindex="-1">📚 Key Principles in LLD <a class="header-anchor" href="#📚-key-principles-in-lld" aria-label="Permalink to &quot;📚 Key Principles in LLD&quot;">​</a></h2><h3 id="_1-single-responsibility-principle" tabindex="-1">1. <strong>Single Responsibility Principle</strong> <a class="header-anchor" href="#_1-single-responsibility-principle" aria-label="Permalink to &quot;1. **Single Responsibility Principle**&quot;">​</a></h3><p>Each class should have only one reason to change.</p><h3 id="_2-open-closed-principle" tabindex="-1">2. <strong>Open/Closed Principle</strong> <a class="header-anchor" href="#_2-open-closed-principle" aria-label="Permalink to &quot;2. **Open/Closed Principle**&quot;">​</a></h3><p>Classes should be open for extension but closed for modification.</p><h3 id="_3-encapsulation" tabindex="-1">3. <strong>Encapsulation</strong> <a class="header-anchor" href="#_3-encapsulation" aria-label="Permalink to &quot;3. **Encapsulation**&quot;">​</a></h3><p>Hide internal details and expose only necessary interfaces.</p><h3 id="_4-loose-coupling" tabindex="-1">4. <strong>Loose Coupling</strong> <a class="header-anchor" href="#_4-loose-coupling" aria-label="Permalink to &quot;4. **Loose Coupling**&quot;">​</a></h3><p>Classes should have minimal dependencies on each other.</p><h3 id="_5-high-cohesion" tabindex="-1">5. <strong>High Cohesion</strong> <a class="header-anchor" href="#_5-high-cohesion" aria-label="Permalink to &quot;5. **High Cohesion**&quot;">​</a></h3><p>Related functionalities should be grouped together.</p><h2 id="🎯-best-practices" tabindex="-1">🎯 Best Practices <a class="header-anchor" href="#🎯-best-practices" aria-label="Permalink to &quot;🎯 Best Practices&quot;">​</a></h2><h3 id="✅-do" tabindex="-1">✅ DO <a class="header-anchor" href="#✅-do" aria-label="Permalink to &quot;✅ DO&quot;">​</a></h3><ul><li>Start with simple designs and evolve</li><li>Use meaningful names for classes and methods</li><li>Keep methods small and focused</li><li>Document complex logic</li><li>Consider future extensibility</li></ul><h3 id="❌-don-t" tabindex="-1">❌ DON&#39;T <a class="header-anchor" href="#❌-don-t" aria-label="Permalink to &quot;❌ DON&#39;T&quot;">​</a></h3><ul><li>Over-engineer solutions</li><li>Create god classes (classes that do everything)</li><li>Ignore error handling</li><li>Skip validation and testing considerations</li><li>Design in isolation without team input</li></ul><h2 id="🔗-what-s-next" tabindex="-1">🔗 What&#39;s Next? <a class="header-anchor" href="#🔗-what-s-next" aria-label="Permalink to &quot;🔗 What&#39;s Next?&quot;">​</a></h2><p>Now that you understand what LLD is, let&#39;s explore the fundamental design principles that guide good software design.</p><hr><h2 id="📖-summary" tabindex="-1">📖 Summary <a class="header-anchor" href="#📖-summary" aria-label="Permalink to &quot;📖 Summary&quot;">​</a></h2><p>Low-Level Design is about creating detailed blueprints for software implementation. It bridges the gap between high-level architecture and actual code, ensuring that systems are:</p><ul><li><strong>Well-structured</strong>: Clear organization of classes and components</li><li><strong>Maintainable</strong>: Easy to modify and extend</li><li><strong>Testable</strong>: Designed with testing in mind</li><li><strong>Scalable</strong>: Can handle growth and change</li><li><strong>Robust</strong>: Handles edge cases and errors gracefully</li></ul><p>The key is to think through the details before coding, apply proven principles and patterns, and create designs that teams can understand and implement successfully.</p><hr>`,32))])}const v=k(c,[["render",b]]);export{C as __pageData,v as default};
