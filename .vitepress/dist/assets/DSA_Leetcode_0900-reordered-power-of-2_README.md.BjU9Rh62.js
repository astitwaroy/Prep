import{_ as r,c as t,o,ag as n}from"./chunks/framework.DUDLMHYb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0900-reordered-power-of-2/README.md","filePath":"DSA/Leetcode/0900-reordered-power-of-2/README.md"}'),s={name:"DSA/Leetcode/0900-reordered-power-of-2/README.md"};function p(a,e,d,i,c,l){return o(),t("div",null,[...e[0]||(e[0]=[n(`<h2><a href="https://leetcode.com/problems/reordered-power-of-2">900. Reordered Power of 2</a></h2><h3>Medium</h3><hr><p>You are given an integer <code>n</code>. We reorder the digits in any order (including the original order) such that the leading digit is not zero.</p><p>Return <code>true</code> <em>if and only if we can do this so that the resulting number is a power of two</em>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> n = 1
<strong>Output:</strong> true
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> n = 10
<strong>Output:</strong> false
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li></ul>`,13)])])}const _=r(s,[["render",p]]);export{u as __pageData,_ as default};
