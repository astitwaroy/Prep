import{_ as t,c as s,o,ag as r}from"./chunks/framework.DUDLMHYb.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/1170-shortest-common-supersequence/README.md","filePath":"DSA/Leetcode/1170-shortest-common-supersequence/README.md"}'),a={name:"DSA/Leetcode/1170-shortest-common-supersequence/README.md"};function n(c,e,u,p,d,i){return o(),s("div",null,[...e[0]||(e[0]=[r(`<h2><a href="https://leetcode.com/problems/shortest-common-supersequence">1170. Shortest Common Supersequence </a></h2><h3>Hard</h3><hr><p>Given two strings <code>str1</code> and <code>str2</code>, return <em>the shortest string that has both </em><code>str1</code><em> and </em><code>str2</code><em> as <strong>subsequences</strong></em>. If there are multiple valid strings, return <strong>any</strong> of them.</p><p>A string <code>s</code> is a <strong>subsequence</strong> of string <code>t</code> if deleting some number of characters from <code>t</code> (possibly <code>0</code>) results in the string <code>s</code>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> str1 = &quot;abac&quot;, str2 = &quot;cab&quot;
<strong>Output:</strong> &quot;cabac&quot;
<strong>Explanation:</strong> 
str1 = &quot;abac&quot; is a subsequence of &quot;cabac&quot; because we can delete the first &quot;c&quot;.
str2 = &quot;cab&quot; is a subsequence of &quot;cabac&quot; because we can delete the last &quot;ac&quot;.
The answer provided is the shortest such string that satisfies these properties.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> str1 = &quot;aaaaaaaa&quot;, str2 = &quot;aaaaaaaa&quot;
<strong>Output:</strong> &quot;aaaaaaaa&quot;
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li><li><code>str1</code> and <code>str2</code> consist of lowercase English letters.</li></ul>`,13)])])}const g=t(a,[["render",n]]);export{m as __pageData,g as default};
