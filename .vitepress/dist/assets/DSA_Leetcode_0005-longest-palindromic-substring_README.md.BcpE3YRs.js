import{_ as e,c as n,o,ag as s}from"./chunks/framework.DUDLMHYb.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/0005-longest-palindromic-substring/README.md","filePath":"DSA/Leetcode/0005-longest-palindromic-substring/README.md"}'),r={name:"DSA/Leetcode/0005-longest-palindromic-substring/README.md"};function a(i,t,p,l,d,c){return o(),n("div",null,[...t[0]||(t[0]=[s(`<h2><a href="https://leetcode.com/problems/longest-palindromic-substring">5. Longest Palindromic Substring</a></h2><h3>Medium</h3><hr><p>Given a string <code>s</code>, return <em>the longest</em> <span data-keyword="palindromic-string"><em>palindromic</em></span> <span data-keyword="substring-nonempty"><em>substring</em></span> in <code>s</code>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> s = &quot;babad&quot;
<strong>Output:</strong> &quot;bab&quot;
<strong>Explanation:</strong> &quot;aba&quot; is also a valid answer.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> s = &quot;cbbd&quot;
<strong>Output:</strong> &quot;bb&quot;
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= s.length &lt;= 1000</code></li><li><code>s</code> consist of only digits and English letters.</li></ul>`,12)])])}const m=e(r,[["render",a]]);export{u as __pageData,m as default};
