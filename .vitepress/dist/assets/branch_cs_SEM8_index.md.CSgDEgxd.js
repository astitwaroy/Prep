import{_ as t,c as s,o as a,a4 as i}from"./chunks/framework.BTsuxa0O.js";const p=JSON.parse('{"title":"📘 SEM8 — Subjects · PYQs","description":"","frontmatter":{},"headers":[],"relativePath":"branch/cs/SEM8/index.md","filePath":"branch/cs/SEM8/index.md"}'),o={name:"branch/cs/SEM8/index.md"};function l(r,e,d,n,c,u){return a(),s("div",null,[...e[0]||(e[0]=[i('<h1 id="📘-sem8-—-subjects-·-pyqs" tabindex="-1">📘 SEM8 — Subjects · PYQs <a class="header-anchor" href="#📘-sem8-—-subjects-·-pyqs" aria-label="Permalink to &quot;📘 SEM8 — Subjects · PYQs&quot;">​</a></h1><blockquote><p>A neat, quick-access hub for SEM8 resources — subjects and previous year questions.</p></blockquote><p align="center"><img alt="badge-subjects" src="https://img.shields.io/badge/Subjects-5-blue?style=for-the-badge"><img alt="badge-pyqs" src="https://img.shields.io/badge/PYQs-Mid%2FEnd-orange?style=for-the-badge"></p><hr><h2 id="quick-nav" tabindex="-1">Quick nav <a class="header-anchor" href="#quick-nav" aria-label="Permalink to &quot;Quick nav&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Subjects</th><th style="text-align:center;">PYQs</th></tr></thead><tbody><tr><td style="text-align:right;">🔖 <a href="#subjects">Subjects</a> — SEM8 list</td><td style="text-align:center;">📚 <a href="#pyqs-previous-year-questions">PYQs</a> — Midsem / Endsem</td></tr></tbody></table><hr><h2 id="subjects" tabindex="-1">Subjects <a class="header-anchor" href="#subjects" aria-label="Permalink to &quot;Subjects&quot;">​</a></h2><p><a name="subjects"></a></p><details><summary><strong>Click to expand Subjects</strong> — SEM8 subjects</summary><p>Here are the SEM8 subjects (as provided):</p><ul><li>📁 CS442: Wireless Sensor Network</li><li>📁 CS444: Information Theory and Coding</li><li>📁 CS484: Cloud Computing</li><li>📁 CS485: Machine Translation</li><li>📁 HS401: Managerial Economics</li></ul><p><strong>Quick tips</strong></p><ul><li>Add lecture notes and solved examples inside <code>branch/cs/SEM8/&lt;Subject&gt;/</code>.</li><li>Keep PYQs under <code>PYQs/&lt;Subject&gt;/</code> for consistent linking.</li></ul></details><hr><h2 id="pyqs-previous-year-questions" tabindex="-1">PYQs (Previous Year Questions) <a class="header-anchor" href="#pyqs-previous-year-questions" aria-label="Permalink to &quot;PYQs (Previous Year Questions)&quot;">​</a></h2><p><a name="pyqs-previous-year-questions"></a></p><details><summary><strong>Click to expand PYQs</strong> — organized Midsem &amp; Endsem</summary><p>Organize PYQs by subject under <code>PYQs/&lt;Subject&gt;/</code> with filenames like <code>Subject_Mid_YYYY.pdf</code> or <code>Subject_End_YYYY.pdf</code>.</p><details><summary><em>Midsem</em></summary><ul><li>Example: <code>PYQs/CS442/CS442_Mid_2024.pdf</code></li><li>Example: <code>PYQs/CS484/CS484_Mid_2023.pdf</code></li></ul></details><details><summary><em>Endsem</em></summary><ul><li>Example: <code>PYQs/CS442/CS442_End_2024.pdf</code></li><li>Example: <code>PYQs/CS444/CS444_End_2023.pdf</code></li></ul></details><p><strong>Add links</strong> — when you add PDFs to the repository I can insert direct links here.</p></details><hr><h2 id="resources-checklist" tabindex="-1">Resources &amp; Checklist <a class="header-anchor" href="#resources-checklist" aria-label="Permalink to &quot;Resources &amp; Checklist&quot;">​</a></h2><ul><li>[ ] Add real PYQ PDFs under <code>PYQs/</code> (one folder per subject)</li><li>[ ] Add short README files inside each subject folder explaining naming conventions</li></ul><hr><h2 id="how-to-contribute" tabindex="-1">How to contribute <a class="header-anchor" href="#how-to-contribute" aria-label="Permalink to &quot;How to contribute&quot;">​</a></h2><ul><li>To add a PYQ: create <code>PYQs/&lt;Subject&gt;/</code> and name files like <code>Subject_Mid_YYYY.pdf</code>.</li><li>To link a PDF here, paste a relative link (e.g., <code>[CS442 Mid 2024](./PYQs/CS442/CS442_Mid_2024.pdf)</code>).</li><li>If you want me to scan the repo and populate PYQ links, say &quot;scan and populate&quot; and I&#39;ll search and add links automatically.</li></ul><hr><p><em>Want a different style (visual cards, subject pages with images, or autogenerated index pages)? Tell me which and I’ll implement it.</em></p>',22)])])}const m=t(o,[["render",l]]);export{p as __pageData,m as default};
