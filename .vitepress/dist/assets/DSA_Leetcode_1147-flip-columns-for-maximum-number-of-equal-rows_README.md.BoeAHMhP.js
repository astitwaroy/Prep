import{_ as o,c as t,o as r,ag as n}from"./chunks/framework.DUDLMHYb.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DSA/Leetcode/1147-flip-columns-for-maximum-number-of-equal-rows/README.md","filePath":"DSA/Leetcode/1147-flip-columns-for-maximum-number-of-equal-rows/README.md"}'),a={name:"DSA/Leetcode/1147-flip-columns-for-maximum-number-of-equal-rows/README.md"};function s(l,e,m,i,p,u){return r(),t("div",null,[...e[0]||(e[0]=[n(`<h2><a href="https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows">1147. Flip Columns For Maximum Number of Equal Rows</a></h2><h3>Medium</h3><hr><p>You are given an <code>m x n</code> binary matrix <code>matrix</code>.</p><p>You can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from <code>0</code> to <code>1</code> or vice versa).</p><p>Return <em>the maximum number of rows that have all values equal after some number of flips</em>.</p><p> </p><p><strong class="example">Example 1:</strong></p><pre><strong>Input:</strong> matrix = [[0,1],[1,1]]
<strong>Output:</strong> 1
<strong>Explanation:</strong> After flipping no values, 1 row has all values equal.
</pre><p><strong class="example">Example 2:</strong></p><pre><strong>Input:</strong> matrix = [[0,1],[1,0]]
<strong>Output:</strong> 2
<strong>Explanation:</strong> After flipping values in the first column, both rows have equal values.
</pre><p><strong class="example">Example 3:</strong></p><pre><strong>Input:</strong> matrix = [[0,0,0],[0,0,1],[1,1,0]]
<strong>Output:</strong> 2
<strong>Explanation:</strong> After flipping values in the first two columns, the last two rows have equal values.
</pre><p> </p><p><strong>Constraints:</strong></p><ul><li><code>m == matrix.length</code></li><li><code>n == matrix[i].length</code></li><li><code>1 &lt;= m, n &lt;= 300</code></li><li><code>matrix[i][j]</code> is either <code>0</code> or <code>1</code>.</li></ul>`,16)])])}const d=o(a,[["render",s]]);export{f as __pageData,d as default};
